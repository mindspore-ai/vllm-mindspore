/**
 * Copyright 2024 Zhang Qinghua
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

INSTRUCTION(LoadConst)  // Load a const value from contant table.
INSTRUCTION(LoadName)   // Load a value by name from symbol table.
INSTRUCTION(StoreName)  // Store the value by name into symbol table.
INSTRUCTION(PopTop)     // Pop up all from the stack.
INSTRUCTION(BinaryAdd)  // Do binary add operation.
INSTRUCTION(BinarySub)  // Do binary sub operation.
INSTRUCTION(BinaryMul)  // Do binary mul operation.
INSTRUCTION(BinaryDiv)  // Do binary div operation.
INSTRUCTION(CallFunc)   // Call function with new frame, and bind the arguments.
INSTRUCTION(ReturnVal)  // Return the value to caller frame.
INSTRUCTION(DefineFunc) // Make a new function with context.
INSTRUCTION(EnterBlock) // Enter a block with context.
INSTRUCTION(Compare)    // Compare two operand by ==, !=, >, <, >=, or <=.
INSTRUCTION(JumpTrue)   // Jump to offset if the condition is true.
INSTRUCTION(JumpFalse)  // Jump to offset if the condition is false.
INSTRUCTION(Jump)       // Jump by offset unconditionally.
INSTRUCTION(StdCin)     // Input from standard input stream.
INSTRUCTION(StdCout)    // Output to standard output stream.
